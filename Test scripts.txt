1) Automating bebosite

describe('Automating bebo site',()=>{
    it('Test case to verify the highlighted tabs',()=>{
       //visiting the url
        cy.visit('./');

       //Clicking on india careers link
       cy.findAllByRole('link',{name:"India Careers"}).click();

       //assertion to check the url
       cy.url().should('include','/careers');

//hi 
//manreet
    //Using attributes
       //Verifying learning and development tab to be highlighted
       cy.get('[data-toggle=".learning-and-developmentIndia_Careers"]').should('have.class', 'active');

       //Clicking on development tab 
       cy.get('[data-toggle=".developmentIndia_Careers"]').click();

       //Verifying development tab to be highlighted
       cy.get('[data-toggle=".developmentIndia_Careers"]').should('have.class', 'active');

       ////Clicking on learning and development tab 
       cy.get('[data-toggle=".learning-and-developmentIndia_Careers"]').click();
    
    //Verifying the job title 
    cy.findByRole('heading',{name:"Learning and Development Content Designer 4225 Apply Now"});

    //Verifying the employment type
   cy.findByText('Experience: 2 - 5 Years').within(() => { 
      cy.findByText('Employment Type: Full-Time').should('be.visible'); 
   });
   
    //Clicking on Apply now link
    cy.findByRole('link',{name:"Apply Now"}).invoke('removeAttr','target').invoke('attr','target','_self').click();

    //Verifying the url
    cy.url().should('include','https://bebotechnologiesin.mobile-recruit.com/');

    //Assert button text to be visible
    cy.intercept('https://bebotechnologiesin.mobile-recruit.com/modules/microsites/templates/*').as('new');
    cy.wait('@new');
    cy.findByRole('link',{name:"Become Part Of Team Bebo - Join Us"}).should('be.visible');
    })
})




2) Automating saucedemo website
import example from '../../fixtures/example.json'


describe('Automating demo site',()=>{
   //Visiting the url using cy.origin
    before(()=>{
      cy.origin('https://google.com',()=>{
            cy.visit('https://www.saucedemo.com/');

      })
        //Custom command to visit the site and then login by typing username, password and clicking on login button
       cy.login(example.userName,example.password);
    })
    it('Test case to filter items in ascending and descending order',()=>{
        //checking url after log in
        cy.url().should('include','/inventory.html');

        //checking the filter name
        cy.findByDisplayValue('Name (A to Z)').should('be.visible');

        //Clicking on filter
        cy.get('.select_container').find('span').contains('Name (A to Z)').click({force:true});
        
        //Verifying to sort Name from Z to A
        cy.findByRole('combobox').select('za');
        
         //Verifying it expands and show filter list item Select "Name (Z to A)"
         cy.get('.inventory_item_name').then($items => {
            const itemNames = $items.toArray().map(item => item.textContent.trim()) //this line creates a new array, itemNames, by mapping over the elements and trimming any whitespace from their text content.
            expect(itemNames).to.deep.equal(itemNames.slice().sort().reverse()) //here itemNames array is equal to a reversed and sorted copy of itself.
          });
        
        //To verify selecting  "Name (A to Z)" 
        cy.findByRole('combobox').select('az');
         
        //verifying the ascending order
          cy.get('.inventory_item_name').then($items => {
            const itemNames = $items.toArray().map(item => item.textContent.trim()) //this line creates a new array, itemNames, by mapping over the elements and trimming any whitespace from their text content.
            expect(itemNames).to.deep.equal(itemNames.slice().sort()) //here itemNames array is equal to a ascending array and sorted copy of itself.
          });

        
   })
})
